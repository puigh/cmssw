#ifndef _L1ITMu_L1TMuonTextDumper_h_
#define _L1ITMu_L1TMuonTextDumper_h_

#include <memory>
#include <map>

#include <stdio.h>
#include <stdlib.h>
#include <iostream>

#include "FWCore/Framework/interface/Frameworkfwd.h"
#include "FWCore/Framework/interface/Event.h"
#include "FWCore/Framework/interface/EventSetup.h"
#include "FWCore/ParameterSet/interface/ParameterSet.h"
#include "FWCore/Framework/interface/EDAnalyzer.h"
#include "FWCore/Framework/interface/EDProducer.h"

#include "FWCore/Framework/interface/MakerMacros.h"

#include "FWCore/ServiceRegistry/interface/Service.h"
#include "CommonTools/UtilAlgos/interface/TFileService.h"

#include "L1Trigger/L1TMuon/interface/SubsystemCollectorFactory.h"

#include "DataFormats/HepMCCandidate/interface/GenParticleFwd.h"
#include "DataFormats/HepMCCandidate/interface/GenParticle.h"
#include <TMath.h>
#include <TCanvas.h>
#include <TLorentzVector.h>

#include <TStyle.h>
#include <TLegend.h>
#include <TF1.h>
#include <TH2.h>
#include <TH1F.h>
#include <TFile.h>
#include <TNtuple.h>
#include "L1Trigger/L1TMuon/interface/GeometryTranslator.h"

#include "DataFormats/L1TMuon/interface/L1TMuonTriggerPrimitive.h"
#include "DataFormats/L1TMuon/interface/L1TMuonTriggerPrimitiveFwd.h"

#include "DataFormats/L1TMuon/interface/L1TMuonInternalTrack.h"
#include "DataFormats/L1TMuon/interface/L1TMuonInternalTrackFwd.h"


#include "PhiMemoryImage.h"
#include "EmulatorClasses.h"
#include "L1Trigger/CSCTrackFinder/interface/CSCTFPtLUT.h"
#include "L1Trigger/CSCTrackFinder/interface/CSCSectorReceiverLUT.h"

typedef edm::ParameterSet PSet;

// --> I removed a bunch of stuff <---
// --> We sould clean up the includes and rename the class <--
// --> to something more appropriate like L1TMuonNtupler or something <--

//class L1TMuonTextDumper : public edm::EDProducer {
class L1TMuonTextDumper : public edm::EDAnalyzer {
public:
  L1TMuonTextDumper(const PSet&);
  ~L1TMuonTextDumper() {}
  
  
  int FR(int z){
  
  	int FR = 0;
	int coord[5] = {586,686,815,924,1013};
	
  	for(int i=0;i<5;i++){
  		
		if((z < (coord[i] + 7)) && (z > (coord[i] - 7)))
			FR = 1;
  	}
	return FR;
  }
	
 void analyze(const edm::Event&, const edm::EventSetup&); 
 //void produce(edm::Event&, const edm::EventSetup&); 
  void beginJob();
  void endJob();
  
  TFile *fout;//("fuck.root","RECREATE");
  FILE *f;
  
  edm::ParameterSet LUTparam;
  CSCSectorReceiverLUT* srLUTs_[5][2];
  const float ptscale[33] = { 
  	-1.,   0.0,   1.5,   2.0,   2.5,   3.0,   3.5,   4.0,
    4.5,   5.0,   6.0,   7.0,   8.0,  10.0,  12.0,  14.0,  
    16.0,  18.0,  20.0,  25.0,  30.0,  35.0,  40.0,  45.0, 
    50.0,  60.0,  70.0,  80.0,  90.0, 100.0, 120.0, 140.0, 1.E6 };
    
    
  TH1F* StubDEta, *Counter, *Turnon, *gentotal, *ME4Phi,*stubsize;
  TH2F* StubDphivPt, *chamberfr, *chamberfr2;

private:
  bool _dogen;
  edm::InputTag _geninput;
  std::vector<edm::InputTag> _tpinputs, _convTrkInputs;

  // --> We use this TFileService to save the ntuple <--
  // --> Python saves it for us <--
  edm::Service<TFileService> histofile;
 
  
  // --> I added this <---
  TNtuple* ntuple, *thentuple, *FullNtuple;
  
};




#endif
